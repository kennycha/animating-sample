{"version":3,"sources":["useRendering.js","App.js","useReRendering.js","index.js"],"names":["innerMixer","MAP_TYPES","useRendering","id","inputUrl","setLoadedObj","setMixer","mixer","useState","contents","setContents","undefined","theScene","setTheScene","currentBone","setCurrentBone","clock","THREE","createScene","useCallback","scene","background","fog","clearRendering","renderingDiv","removeEventListener","onKeyDown","onKeyUp","firstChild","removeChild","forEach","content","remove","traverse","node","isMesh","geometry","dispose","_","isArray","material","mapType","createCamera","camera","window","innerWidth","innerHeight","position","set","lookAt","createRenderer","renderer","antialias","alpha","setPixelRatio","devicePixelRatio","shadowMap","enabled","outputEncoding","addLights","hemiLight","add","dirLight","castShadow","shadow","mapSize","near","far","d","left","right","top","bottom","addGround","texture","load","render","wrapS","wrapT","repeat","groundMesh","color","map","depthWrite","side","rotation","x","Math","PI","receiveShadow","xMaterial","yMaterial","xPoints","yPoints","xGeometry","setFromPoints","yGeometry","xLine","yLine","createCameraControls","cameraControls","OrbitControls","domElement","target","update","enablePan","maxDistance","minZoom","addEventListener","object","y","z","createTransformControls","transformControls","TransformControls","event","value","console","log","keyCode","detach","setSpace","space","setTranslationSnap","setRotationSnap","degToRad","setMode","size","setSize","useEffect","document","getElementById","FBXLoader","createMixer","model","scale","multiplyScalar","child","addModel","skeletonHelper","bones","bone","boneMaterial","opacity","transparent","depthTest","boneGeometry","boneMesh","dragControls","DragControls","parent","attach","addJointMeshes","visible","addSkeletonHelper","appendChild","getDelta","canvas","width","height","canvasPixelWidth","canvasPixelHeight","needResize","clientWidth","clientHeight","resizeRendererToDisplaySize","aspect","updateProjectionMatrix","requestAnimationFrame","Title","styled","div","Input","input","RenderingDiv","ButtonContainer","Button","App","setInputUrl","loadedObj","currentClip","setCurrentClip","possibleClips","setPossibleClips","createAnimationClips","fileAnimations","animations","fileClips","anim","clip","findByName","name","clipAction","useReRendering","type","accept","onChange","file","files","fileUrl","URL","createObjectURL","onClick","setTime","reset","timeScale","play","stop","length","index","_clip","onAnimButtonClick","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6f6d0b0a.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport * as THREE from 'three'\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\nimport { DragControls } from 'three/examples/jsm/controls/DragControls';\nimport _ from 'lodash';\n\nconst MAP_TYPES = ['map', 'aoMap', 'emissiveMap', 'glossinessMap', 'metalnessMap', 'normalMap', 'roughnessMap', 'specularMap'];\n\nlet innerMixer;\n\nexport const useRendering = ({ id, inputUrl, setLoadedObj, mixer, setMixer }) => {\n  const [contents, setContents] = useState([]);\n  const [theScene, setTheScene] = useState(undefined);\n  const [currentBone, setCurrentBone] = useState(undefined);\n\n  const clock = new THREE.Clock();\n\n  const createScene = useCallback(() => {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xbbbbbb);\n    scene.fog = new THREE.Fog(0xbbbbbb, 10, 80);\n    setTheScene(scene);\n    return scene;\n  }, [])\n\n  const clearRendering = useCallback(({ renderingDiv }) => {\n    if (renderingDiv) {\n      renderingDiv.removeEventListener('keydown', onKeyDown);\n      renderingDiv.removeEventListener('keyup', onKeyUp);\n      while (renderingDiv.firstChild) {\n        renderingDiv.removeChild(renderingDiv.firstChild);\n      }\n    }\n    contents.forEach((content) => {\n      theScene?.remove(content);\n      content.traverse((node) => {\n        if (!node.isMesh) return;\n        node.geometry.dispose();\n        const materials = _.isArray(node.material) ? node.material : [node.material];\n        materials.forEach((material) => {\n          MAP_TYPES.forEach((mapType) => {\n            material[mapType]?.dispose();\n          })\n        })\n      })\n    })\n    setContents([]);\n    setTheScene(undefined);\n  }, [])\n\n  const createCamera = useCallback(() => {\n    const camera = new THREE.PerspectiveCamera(50, window.innerWidth/window.innerHeight, 0.1, 500);\n    camera.position.set(-20, 20, 2);\n    camera.lookAt(0, 0, 0);\n    return camera;\n  }, [])\n\n  const createRenderer = useCallback(({ renderingDiv }) => {\n    const renderer = new THREE.WebGL1Renderer({ antialias: true, alpha: true });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.shadowMap.enabled = true;\n    renderer.outputEncoding = THREE.sRGBEncoding;\n    return renderer;\n  }, [])\n\n  const addLights = useCallback(({ scene }) => {\n    const hemiLight = new THREE.HemisphereLight(0xAAAAAA);\n    hemiLight.position.set(0, 20, 0);\n    scene.add(hemiLight)\n\n    const dirLight = new THREE.DirectionalLight(0xffffff, 0.54)\n    dirLight.position.set(-8, 12, 8);\n    dirLight.castShadow = true;\n    dirLight.shadow.mapSize = new THREE.Vector2(1000, 1000);\n    dirLight.shadow.camera.near = 0.1;\n    dirLight.shadow.camera.far = 1500;\n    const d = 8.25;\n    dirLight.shadow.camera.left = d * -1;\n    dirLight.shadow.camera.right = d;\n    dirLight.shadow.camera.top = d;\n    dirLight.shadow.camera.bottom = d * -1;\n    scene.add(dirLight);\n  }, [])\n\n  const addGround = useCallback(({ scene, camera, renderer }) => {\n    const texture = new THREE.TextureLoader().load(\n      'texture/texture_01.png',\n      () => { renderer.render(scene, camera) }\n    )\n    texture.wrapS = THREE.RepeatWrapping;\n    texture.wrapT = THREE.RepeatWrapping;\n    texture.repeat.set(300, 300);\n    \n    const groundMesh = new THREE.Mesh(\n      new THREE.PlaneBufferGeometry(1000, 1000),\n      new THREE.MeshPhongMaterial({\n        color: 0xbbbbbb,\n        map: texture,\n        depthWrite: false,\n        side: THREE.DoubleSide,\n      })\n    );\n    groundMesh.position.set(0, 0, 0);\n    groundMesh.rotation.x = -Math.PI / 2;\n    groundMesh.receiveShadow = true;\n    scene.add(groundMesh);\n\n    const xMaterial = new THREE.LineBasicMaterial({ color: '#EA2027' });\n    const yMaterial = new THREE.LineBasicMaterial({ color: '#0652DD' });\n\n    const xPoints = [new THREE.Vector3(-500, 0, 0), new THREE.Vector3(500, 0, 0)];\n    const yPoints = [new THREE.Vector3(0, 0, -500), new THREE.Vector3(0, 0, 500)];\n\n    const xGeometry = new THREE.BufferGeometry().setFromPoints(xPoints);\n    const yGeometry = new THREE.BufferGeometry().setFromPoints(yPoints);\n\n    const xLine = new THREE.Line(xGeometry, xMaterial);\n    const yLine = new THREE.Line(yGeometry, yMaterial);\n\n    scene.add(xLine, yLine);\n  }, [])\n\n  const createCameraControls = useCallback(({ camera, renderer }) => {\n    const cameraControls = new OrbitControls(camera, renderer.domElement);\n    cameraControls.target.set(0, 0, 0);\n    cameraControls.update();\n    cameraControls.enabled = true;\n    cameraControls.enablePan = true;\n    cameraControls.maxDistance = 100;\n    cameraControls.minZoom = 1.0001;\n    cameraControls.addEventListener('change', () => {\n      if (cameraControls.object.position.y < 1.01) {\n        const { x, y, z } = cameraControls.object.position;\n        cameraControls.object.position.set(x, y + 0.01, z);\n      }\n      if (cameraControls.object.position.y > 100) {\n        const { x, y, z } = cameraControls.object.position;\n        cameraControls.object.position.set(x, y - 1, z);\n      }\n    });\n    setContents([...contents, cameraControls]);\n    return cameraControls;\n  }, [])\n\n  const createTransformControls = useCallback(({ scene, camera, renderer, cameraControls }) => {\n    const transformControls = new TransformControls(camera, renderer.domElement);\n    transformControls.addEventListener('change', () => {\n      renderer.render(scene, camera);\n    });\n    transformControls.addEventListener('dragging-changed', (event) => {\n      cameraControls.enabled = !event.value;\n    });\n    setContents([...contents, transformControls]);\n    scene.add(transformControls);\n    return transformControls;\n  }, [])\n  \n  const createMixer = ({ object }) => {\n    innerMixer = new THREE.AnimationMixer(object)\n    setMixer(innerMixer);\n  };\n\n  const addModel = ({ scene, object }) => {\n    object.scale.multiplyScalar(0.05);\n    object.traverse((child) => {\n      if (child.isMesh) {\n        child.castShadow = true;\n        child.receiveShadow = true;\n      }\n    })\n    const model = object;\n    setContents([...contents, model]);\n    scene.add(model);\n    return model;\n  };\n\n  const addSkeletonHelper = ({ scene, model }) => {\n    const skeletonHelper = new THREE.SkeletonHelper(model);\n    skeletonHelper.visible = true;\n    scene.add(skeletonHelper);\n    return skeletonHelper;\n  };\n\n  const addJointMeshes = ({ skeletonHelper, camera, renderer, cameraControls, transformControls }) => {\n    skeletonHelper.bones.forEach((bone) => {\n      const boneMaterial = new THREE.MeshPhongMaterial({\n        color: 0xffffff,\n        opacity: 0.5,\n        transparent: true \n      })\n      boneMaterial.depthWrite = false;\n      boneMaterial.depthTest = false;\n      const boneGeometry = new THREE.SphereBufferGeometry(1, 32, 32);\n      const boneMesh = new THREE.Mesh(boneGeometry, boneMaterial);\n      bone.add(boneMesh);\n    })\n    const dragControls = new DragControls(skeletonHelper.bones, camera, renderer.domElement);\n    dragControls.addEventListener('hoveron', () => {\n      cameraControls.enabled = false;\n    });\n    dragControls.addEventListener('hoveroff', () => {\n      cameraControls.enabled = true;\n    });\n    dragControls.addEventListener('dragstart', (event) => {\n      if (currentBone !== event.object.parent) {\n        transformControls.attach(event.object.parent);\n        setCurrentBone(event.object.parent);\n        dragControls.enabled = false;\n      }\n    });\n    dragControls.addEventListener('dragend', (event) => {\n      dragControls.enabled = true;\n    });    \n  };\n\n  const onKeyDown = ({ event, transformControls }) => {\n    console.log(transformControls)\n    switch (event.keyCode) {\n      case 27: // esc\n      // 현재 transformControl 붙어 있는 것 제거\n        if (transformControls) {\n          transformControls.detach();\n          setCurrentBone(undefined);\n        }\n        break;\n      case 81: // q\n      // 이동방향 기준 범위 변경\n        if (transformControls) {\n          transformControls.setSpace(transformControls.space === 'local' ? 'world' : 'local');\n        }\n        break;\n      case 91: // cmd or win\n      // 설정한 단위로 변경\n        if (transformControls) {\n          transformControls.setTranslationSnap(10);\n          transformControls.setRotationSnap(THREE.MathUtils.degToRad(15));\n        }\n        break;\n      case 87: // w\n      // position 변경 모드\n        if (transformControls) {\n          transformControls.setMode('translate');\n        }\n        break;\n      case 69: // e\n      // rotation 변경 모드\n        if (transformControls) {\n          transformControls.setMode('rotate');\n        }\n        break;\n      case 82: // r\n      // scale 변경 모드\n        if (transformControls) {\n          transformControls.setMode('scale');\n        }\n        break;\n      case 187: // +, =, num+\n      case 107:\n      // transformControls 크기 증가\n        if (transformControls && transformControls.size < 2.0) {\n          transformControls.setSize(transformControls.size + 0.1);\n        }\n        break;\n      case 189: // -, _, num-\n      case 109:\n      // transformControls 크기 감소\n        if (transformControls && transformControls.size > 0.2) {\n          transformControls.setSize(transformControls.size - 0.1);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  \n  const onKeyUp = ({ event, transformControls }) => {\n    switch (event.keyCode) {\n      case 91:\n      // 기본 단위로 변경\n        if (transformControls) {\n          transformControls.setTranslationSnap(null);\n          transformControls.setRotationSnap(null);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  const resizeRendererToDisplaySize = ({ renderer }) => {\n    const canvas = renderer.domElement;\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n    let canvasPixelWidth = canvas.width / window.devicePixelRatio;\n    let canvasPixelHeight = canvas.height / window.devicePixelRatio;\n    const needResize =\n    canvasPixelWidth !== width || canvasPixelHeight !== height;\n    if (needResize) {\n      const renderingDiv = document.getElementById(id);\n      renderer.setSize(renderingDiv?.clientWidth ?? 0, renderingDiv?.clientHeight ?? 0, false)\n    }\n    return needResize;\n  }\n\n  useEffect(() => {\n    const renderingDiv = document.getElementById(id);\n    const scene = createScene();\n    const camera = createCamera()\n    const renderer = createRenderer({ renderingDiv });\n    addLights({ scene });\n    addGround({ scene, camera, renderer });\n    const cameraControls = createCameraControls({ camera, renderer });\n    const transformControls = createTransformControls({ scene, camera, renderer, cameraControls })\n    if (inputUrl) {\n      // keydown 이벤트 발생 안함 (마우스 클릭은 정상 발생)\n      // renderingDiv.addEventListener('keydown', (event) => console.log('keydown happened'));\n      renderingDiv.addEventListener('keydown', (event) => onKeyDown({ event, transformControls }));\n      renderingDiv.addEventListener('keyup', (event) => onKeyUp({ event, transformControls }));\n      const loader = new FBXLoader();\n      loader.load(inputUrl, (object) => {\n        setLoadedObj(object);\n        createMixer({ object });\n        const model = addModel({ scene, object });\n        const skeletonHelper = addSkeletonHelper({ scene, model });\n        addJointMeshes({ skeletonHelper, camera, renderer, cameraControls, transformControls });\n      })\n    }\n\n    renderingDiv.appendChild(renderer.domElement);\n\n    const update = () => {\n      if (innerMixer) {\n        innerMixer.update(clock.getDelta());\n      }\n      if (resizeRendererToDisplaySize({ renderer })) {\n        const canvas = renderer.domElement;\n        camera.aspect = canvas.clientWidth / canvas.clientHeight;\n        camera.updateProjectionMatrix();\n      }\n      renderer.render(scene, camera);\n      requestAnimationFrame(update);\n    }\n\n    update();\n\n    return () => {\n      clearRendering({ renderingDiv });\n    }\n  }, [inputUrl])\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useRendering } from './useRendering'\nimport { useReRendering } from './useReRendering'\n\nconst Title = styled.div`\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.5rem;\n`\n\nconst Input = styled.input``\n\nconst RenderingDiv = styled.div`\n  min-height: 1024px;\n`\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  border-bottom: 1px solid gray;\n`\n\nconst Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  border-right: 1px solid gray;\n  cursor: pointer;\n`\n\nconst id = 'renderingDiv'\n\nconst App = () => {\n  const [inputUrl, setInputUrl] = useState(undefined);\n  const [loadedObj, setLoadedObj] = useState(undefined);\n  const [mixer, setMixer] = useState(undefined);\n  const [currentClip, setCurrentClip] = useState(undefined);\n  const [possibleClips, setPossibleClips] = useState([]);\n\n  const onFileChange = (event) => {\n    const file = event.target.files[0];\n    const fileUrl = URL.createObjectURL(file);\n    setInputUrl(fileUrl);\n  }\n\n  const onResetButtonClick = () => {\n    mixer.setTime(0);\n    currentClip.reset();\n  }\n  \n  const onBackwardButtonClick = () => {\n    mixer.timeScale = -0.3;\n    currentClip.play();\n  }\n\n  const onForwardButtonClick = () => {\n    mixer.timeScale = 0.3;\n    currentClip.play();\n  }\n\n  const onPauseButtonClick = () => {\n    mixer.timeScale = 0;\n  }\n\n  const onStopButtonBlick = () => {\n    currentClip.stop();\n  }\n\n  const onAnimButtonClick = ({ clip }) => {\n    console.log(clip._clip.name)\n    currentClip.stop();\n    setCurrentClip(clip);\n  }\n\n  useRendering({ id, inputUrl, setLoadedObj, mixer, setMixer })\n  \n  useReRendering({ mixer, loadedObj, setCurrentClip, setPossibleClips })\n\n  return (\n    <>\n      <Title>Animating Sample</Title>\n      <Input type='file' accept='.fbx' onChange={onFileChange}/>\n      <RenderingDiv id='renderingDiv'></RenderingDiv>\n      {currentClip &&\n        (<ButtonContainer>\n          <Button onClick={onResetButtonClick}>Reset</Button>\n          <Button onClick={onBackwardButtonClick}>Backward</Button>\n          <Button onClick={onForwardButtonClick}>Forward</Button>\n          <Button onClick={onPauseButtonClick}>Pause</Button>\n          <Button onClick={onStopButtonBlick}>Stop</Button>\n        </ButtonContainer>)}\n      {possibleClips.length !== 0 && \n        (<ButtonContainer>\n          {possibleClips && \n            possibleClips.map((clip, index) => <Button onClick={() => onAnimButtonClick({ clip })} key={index}>{`Anim #${index + 1}`}</Button>)}\n        </ButtonContainer>)}\n    </>\n  );\n}\n\nexport default App;\n","import { useCallback, useEffect } from 'react'\nimport * as THREE from 'three'\nimport _ from 'lodash';\n\nexport const useReRendering = ({ mixer, loadedObj, setCurrentClip, setPossibleClips }) => {\n  const createAnimationClips = useCallback(({ object }) => {\n    const fileAnimations = object.animations;\n    const fileClips = fileAnimations.map((anim) => {\n      let clip = THREE.AnimationClip.findByName(fileAnimations, anim.name);\n      clip = mixer?.clipAction(clip);\n      return clip;\n    });\n    setCurrentClip(fileClips[0]);\n    setPossibleClips(fileClips);\n  }, [mixer, loadedObj])\n\n  useEffect(() => {\n    if (mixer) {\n      createAnimationClips({ object: loadedObj })\n    }\n  }, [mixer])\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}