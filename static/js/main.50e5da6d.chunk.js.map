{"version":3,"sources":["useRendering.js","useReRendering.js","App.js","index.js"],"names":["innerMixer","MAP_TYPES","useRendering","id","inputUrl","setLoadedObj","setMixer","mixer","setTheTransfromControls","useState","contents","setContents","undefined","theScene","setTheScene","currentBone","setCurrentBone","clock","THREE","createScene","useCallback","scene","background","fog","clearRendering","renderingDiv","document","removeEventListener","onKeyDown","onKeyUp","firstChild","removeChild","forEach","content","remove","traverse","node","isMesh","geometry","dispose","_","isArray","material","mapType","createCamera","camera","window","innerWidth","innerHeight","position","set","lookAt","createRenderer","renderer","antialias","alpha","setPixelRatio","devicePixelRatio","shadowMap","enabled","outputEncoding","addLights","hemiLight","add","dirLight","castShadow","shadow","mapSize","near","far","d","left","right","top","bottom","addGround","texture","load","render","wrapS","wrapT","repeat","groundMesh","color","map","depthWrite","side","rotation","x","Math","PI","receiveShadow","xMaterial","yMaterial","xPoints","yPoints","xGeometry","setFromPoints","yGeometry","xLine","yLine","createCameraControls","cameraControls","OrbitControls","domElement","target","update","enablePan","maxDistance","minZoom","addEventListener","object","y","z","createTransformControls","transformControls","TransformControls","event","value","keyCode","detach","setSpace","space","setTranslationSnap","setRotationSnap","degToRad","setMode","size","setSize","useEffect","getElementById","FBXLoader","createMixer","model","scale","multiplyScalar","child","addModel","skeletonHelper","bones","bone","boneMaterial","opacity","transparent","depthTest","boneGeometry","boneMesh","dragControls","DragControls","parent","attach","timeScale","addJointMeshes","visible","addSkeletonHelper","appendChild","getDelta","canvas","width","height","canvasPixelWidth","canvasPixelHeight","needResize","clientWidth","clientHeight","resizeRendererToDisplaySize","aspect","updateProjectionMatrix","requestAnimationFrame","MODE_MAP","translate","rotate","useReRendering","loadedObj","currentAction","setCurrentAction","setPossibleActions","currentIndex","theTransformControls","createAnimationActions","fileAnimations","animations","fileActions","anim","action","findByName","name","clipAction","targetClip","getClip","animationMixer","targetIndex","targetBone","targetTrack","find","tracks","track","mode","posX","posY","posZ","values","quaternion","rotW","w","rotX","rotY","rotZ","scaX","scaY","scaZ","addConvertingEventlistener","Title","styled","div","Input","input","RenderingDiv","ButtonContainer","Button","App","setInputUrl","possibleActions","setCurrentIndex","type","accept","onChange","file","files","Boolean","fileUrl","URL","createObjectURL","onClick","setTime","reset","play","stop","onKeyPress","key","targetIdx","parseInt","_clip","times","length","isFinite","isRunning","targetTime","parseFloat","index","onAnimButtonClick","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.50e5da6d.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport * as THREE from 'three'\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\nimport { DragControls } from 'three/examples/jsm/controls/DragControls';\nimport _ from 'lodash';\n\nconst MAP_TYPES = ['map', 'aoMap', 'emissiveMap', 'glossinessMap', 'metalnessMap', 'normalMap', 'roughnessMap', 'specularMap'];\n\nlet innerMixer;\n\nexport const useRendering = ({ id, inputUrl, setLoadedObj, mixer, setMixer, setTheTransfromControls }) => {\n  const [contents, setContents] = useState([]);\n  const [theScene, setTheScene] = useState(undefined);\n  const [currentBone, setCurrentBone] = useState(undefined);\n\n  const clock = new THREE.Clock();\n\n  const createScene = useCallback(() => {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xbbbbbb);\n    scene.fog = new THREE.Fog(0xbbbbbb, 10, 80);\n    setTheScene(scene);\n    return scene;\n  }, [])\n\n  const clearRendering = useCallback(({ renderingDiv }) => {\n    document.removeEventListener('keydown', onKeyDown);\n    document.removeEventListener('keyup', onKeyUp);\n    if (renderingDiv) {\n      while (renderingDiv.firstChild) {\n        renderingDiv.removeChild(renderingDiv.firstChild);\n      }\n    }\n    contents.forEach((content) => {\n      theScene?.remove(content);\n      content.traverse((node) => {\n        if (!node.isMesh) return;\n        node.geometry.dispose();\n        const materials = _.isArray(node.material) ? node.material : [node.material];\n        materials.forEach((material) => {\n          MAP_TYPES.forEach((mapType) => {\n            material[mapType]?.dispose();\n          })\n        })\n      })\n    })\n    setContents([]);\n    setTheScene(undefined);\n  }, [])\n\n  const createCamera = useCallback(() => {\n    const camera = new THREE.PerspectiveCamera(50, window.innerWidth/window.innerHeight, 0.1, 500);\n    camera.position.set(-20, 20, 2);\n    camera.lookAt(0, 0, 0);\n    return camera;\n  }, [])\n\n  const createRenderer = useCallback(({ renderingDiv }) => {\n    const renderer = new THREE.WebGL1Renderer({ antialias: true, alpha: true });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.shadowMap.enabled = true;\n    renderer.outputEncoding = THREE.sRGBEncoding;\n    return renderer;\n  }, [])\n\n  const addLights = useCallback(({ scene }) => {\n    const hemiLight = new THREE.HemisphereLight(0xAAAAAA);\n    hemiLight.position.set(0, 20, 0);\n    scene.add(hemiLight)\n\n    const dirLight = new THREE.DirectionalLight(0xffffff, 0.54)\n    dirLight.position.set(-8, 12, 8);\n    dirLight.castShadow = true;\n    dirLight.shadow.mapSize = new THREE.Vector2(1000, 1000);\n    dirLight.shadow.camera.near = 0.1;\n    dirLight.shadow.camera.far = 1500;\n    const d = 8.25;\n    dirLight.shadow.camera.left = d * -1;\n    dirLight.shadow.camera.right = d;\n    dirLight.shadow.camera.top = d;\n    dirLight.shadow.camera.bottom = d * -1;\n    scene.add(dirLight);\n  }, [])\n\n  const addGround = useCallback(({ scene, camera, renderer }) => {\n    const texture = new THREE.TextureLoader().load(\n      'texture/texture_01.png',\n      () => { renderer.render(scene, camera) }\n    )\n    texture.wrapS = THREE.RepeatWrapping;\n    texture.wrapT = THREE.RepeatWrapping;\n    texture.repeat.set(300, 300);\n    \n    const groundMesh = new THREE.Mesh(\n      new THREE.PlaneBufferGeometry(1000, 1000),\n      new THREE.MeshPhongMaterial({\n        color: 0xbbbbbb,\n        map: texture,\n        depthWrite: false,\n        side: THREE.DoubleSide,\n      })\n    );\n    groundMesh.position.set(0, 0, 0);\n    groundMesh.rotation.x = -Math.PI / 2;\n    groundMesh.receiveShadow = true;\n    scene.add(groundMesh);\n\n    const xMaterial = new THREE.LineBasicMaterial({ color: '#EA2027' });\n    const yMaterial = new THREE.LineBasicMaterial({ color: '#0652DD' });\n\n    const xPoints = [new THREE.Vector3(-500, 0, 0), new THREE.Vector3(500, 0, 0)];\n    const yPoints = [new THREE.Vector3(0, 0, -500), new THREE.Vector3(0, 0, 500)];\n\n    const xGeometry = new THREE.BufferGeometry().setFromPoints(xPoints);\n    const yGeometry = new THREE.BufferGeometry().setFromPoints(yPoints);\n\n    const xLine = new THREE.Line(xGeometry, xMaterial);\n    const yLine = new THREE.Line(yGeometry, yMaterial);\n\n    scene.add(xLine, yLine);\n  }, [])\n\n  const createCameraControls = useCallback(({ camera, renderer }) => {\n    const cameraControls = new OrbitControls(camera, renderer.domElement);\n    cameraControls.target.set(0, 0, 0);\n    cameraControls.update();\n    cameraControls.enabled = true;\n    cameraControls.enablePan = true;\n    cameraControls.maxDistance = 100;\n    cameraControls.minZoom = 1.0001;\n    cameraControls.addEventListener('change', () => {\n      if (cameraControls.object.position.y < 1.01) {\n        const { x, y, z } = cameraControls.object.position;\n        cameraControls.object.position.set(x, y + 0.01, z);\n      }\n      if (cameraControls.object.position.y > 100) {\n        const { x, y, z } = cameraControls.object.position;\n        cameraControls.object.position.set(x, y - 1, z);\n      }\n    });\n    setContents([...contents, cameraControls]);\n    return cameraControls;\n  }, [])\n\n  const createTransformControls = useCallback(({ scene, camera, renderer, cameraControls }) => {\n    const transformControls = new TransformControls(camera, renderer.domElement);\n    setTheTransfromControls(transformControls);\n    transformControls.addEventListener('change', () => {\n      renderer.render(scene, camera);\n    });\n    transformControls.addEventListener('dragging-changed', (event) => {\n      cameraControls.enabled = !event.value;\n    });\n    setContents([...contents, transformControls]);\n    scene.add(transformControls);\n    return transformControls;\n  }, [])\n  \n  const createMixer = ({ object }) => {\n    innerMixer = new THREE.AnimationMixer(object)\n    setMixer(innerMixer);\n  };\n\n  const addModel = ({ scene, object }) => {\n    object.scale.multiplyScalar(0.05);\n    object.traverse((child) => {\n      if (child.isMesh) {\n        child.castShadow = true;\n        child.receiveShadow = true;\n      }\n    })\n    const model = object;\n    setContents([...contents, model]);\n    scene.add(model);\n    return model;\n  };\n\n  const addSkeletonHelper = ({ scene, model }) => {\n    const skeletonHelper = new THREE.SkeletonHelper(model);\n    skeletonHelper.visible = true;\n    scene.add(skeletonHelper);\n    return skeletonHelper;\n  };\n\n  const addJointMeshes = ({ skeletonHelper, camera, renderer, cameraControls, transformControls }) => {\n    skeletonHelper.bones.forEach((bone) => {\n      const boneMaterial = new THREE.MeshPhongMaterial({\n        color: 0xffffff,\n        opacity: 0.5,\n        transparent: true \n      })\n      boneMaterial.depthWrite = false;\n      boneMaterial.depthTest = false;\n      const boneGeometry = new THREE.SphereBufferGeometry(2, 32, 32);\n      const boneMesh = new THREE.Mesh(boneGeometry, boneMaterial);\n      bone.add(boneMesh);\n    })\n    const dragControls = new DragControls(skeletonHelper.bones, camera, renderer.domElement);\n    dragControls.addEventListener('hoveron', () => {\n      cameraControls.enabled = false;\n    });\n    dragControls.addEventListener('hoveroff', () => {\n      cameraControls.enabled = true;\n    });\n    dragControls.addEventListener('dragstart', (event) => {\n      if (currentBone !== event.object.parent) {\n        transformControls.attach(event.object.parent);\n        setCurrentBone(event.object.parent);\n        dragControls.enabled = false;\n      }\n      innerMixer.timeScale = 0; // joint mesh 클릭 시 애니메이션 중지\n    });\n    dragControls.addEventListener('dragend', (event) => {\n      dragControls.enabled = true;\n    });    \n  };\n\n  const onKeyDown = ({ event, transformControls }) => {\n    switch (event.keyCode) {\n      case 27: // esc\n      // 현재 transformControl 붙어 있는 것 제거\n        if (transformControls) {\n          transformControls.detach();\n          setCurrentBone(undefined);\n        }\n        break;\n      case 81: // q\n      // 이동방향 기준 범위 변경\n        if (transformControls) {\n          transformControls.setSpace(transformControls.space === 'local' ? 'world' : 'local');\n        }\n        break;\n      case 91: // cmd or win\n      // 설정한 단위로 변경\n        if (transformControls) {\n          transformControls.setTranslationSnap(10);\n          transformControls.setRotationSnap(THREE.MathUtils.degToRad(15));\n        }\n        break;\n      case 87: // w\n      // position 변경 모드\n        if (transformControls) {\n          transformControls.setMode('translate');\n        }\n        break;\n      case 69: // e\n      // rotation 변경 모드\n        if (transformControls) {\n          transformControls.setMode('rotate');\n        }\n        break;\n      case 82: // r\n      // scale 변경 모드\n        if (transformControls) {\n          transformControls.setMode('scale');\n        }\n        break;\n      case 187: // +, =, num+\n      case 107:\n      // transformControls 크기 증가\n        if (transformControls && transformControls.size < 2.0) {\n          transformControls.setSize(transformControls.size + 0.1);\n        }\n        break;\n      case 189: // -, _, num-\n      case 109:\n      // transformControls 크기 감소\n        if (transformControls && transformControls.size > 0.2) {\n          transformControls.setSize(transformControls.size - 0.1);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  \n  const onKeyUp = ({ event, transformControls }) => {\n    switch (event.keyCode) {\n      case 91:\n      // 기본 단위로 변경\n        if (transformControls) {\n          transformControls.setTranslationSnap(null);\n          transformControls.setRotationSnap(null);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  const resizeRendererToDisplaySize = ({ renderer }) => {\n    const canvas = renderer.domElement;\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n    let canvasPixelWidth = canvas.width / window.devicePixelRatio;\n    let canvasPixelHeight = canvas.height / window.devicePixelRatio;\n    const needResize =\n    canvasPixelWidth !== width || canvasPixelHeight !== height;\n    if (needResize) {\n      const renderingDiv = document.getElementById(id);\n      renderer.setSize(renderingDiv?.clientWidth ?? 0, renderingDiv?.clientHeight ?? 0, false)\n    }\n    return needResize;\n  }\n\n  useEffect(() => {\n    const renderingDiv = document.getElementById(id);\n    const scene = createScene();\n    const camera = createCamera()\n    const renderer = createRenderer({ renderingDiv });\n    addLights({ scene });\n    addGround({ scene, camera, renderer });\n    const cameraControls = createCameraControls({ camera, renderer });\n    const transformControls = createTransformControls({ scene, camera, renderer, cameraControls })\n    if (inputUrl) {\n      document.addEventListener('keydown', (event) => onKeyDown({ event, transformControls }));\n      document.addEventListener('keyup', (event) => onKeyUp({ event, transformControls }));\n      const loader = new FBXLoader();\n      loader.load(inputUrl, (object) => {\n        setLoadedObj(object);\n        createMixer({ object });\n        const model = addModel({ scene, object });\n        const skeletonHelper = addSkeletonHelper({ scene, model });\n        addJointMeshes({ skeletonHelper, camera, renderer, cameraControls, transformControls });\n      })\n    }\n\n    renderingDiv.appendChild(renderer.domElement);\n\n    const update = () => {\n      if (innerMixer) {\n        innerMixer.update(clock.getDelta());\n      }\n      if (resizeRendererToDisplaySize({ renderer })) {\n        const canvas = renderer.domElement;\n        camera.aspect = canvas.clientWidth / canvas.clientHeight;\n        camera.updateProjectionMatrix();\n      }\n      renderer.render(scene, camera);\n      requestAnimationFrame(update);\n    }\n\n    update();\n\n    return () => {\n      clearRendering({ renderingDiv });\n    }\n  }, [inputUrl])\n}\n","import { useCallback, useEffect } from 'react'\nimport * as THREE from 'three'\nimport _ from 'lodash'\n\nconst MODE_MAP = {\n  translate: 'position',\n  rotate: 'quaternion',\n  scale: 'scale',\n}\n\nexport const useReRendering = ({ mixer, loadedObj, currentAction, setCurrentAction, setPossibleActions, currentIndex, theTransformControls }) => {  \n  const createAnimationActions = useCallback(({ object }) => {\n    const fileAnimations = object.animations;\n    const fileActions = fileAnimations.map((anim) => {\n      let action = THREE.AnimationClip.findByName(fileAnimations, anim.name);\n      action = mixer?.clipAction(action);\n      return action;\n    });\n    setCurrentAction(fileActions[0]);\n    setPossibleActions(fileActions);\n  }, [mixer, loadedObj])\n\n  const addConvertingEventlistener = ({ transformControls, animationMixer, targetClip, targetIndex }) => {\n    transformControls.addEventListener('objectChange', (event) => {\n      const targetBone = event.target.object\n      const targetTrack = _.find(targetClip.tracks, (track) => track.name === `${targetBone.name}.${MODE_MAP[transformControls.mode]}`)\n      switch (transformControls.mode) {\n        case 'translate':\n          const { x: posX, y: posY, z: posZ } = event.target.object.position\n          targetTrack.values[3 * targetIndex] = posX\n          targetTrack.values[3 * targetIndex + 1] = posY\n          targetTrack.values[3 * targetIndex + 2] = posZ\n          break\n        case 'rotate':\n          const { w: rotW, x: rotX, y: rotY, z: rotZ } = event.target.object.quaternion\n          targetTrack.values[4 * targetIndex] = rotW\n          targetTrack.values[4 * targetIndex + 1] = rotX\n          targetTrack.values[4 * targetIndex + 2] = rotY\n          targetTrack.values[4 * targetIndex + 3] = rotZ\n          break\n        case 'scale':\n          const { x: scaX, y: scaY, z: scaZ } = event.target.object.scale\n          targetTrack.values[3 * targetIndex] = scaX\n          targetTrack.values[3 * targetIndex + 1] = scaY\n          targetTrack.values[3 * targetIndex + 2] = scaZ\n          break\n        default:\n          break;\n      }      \n    })\n  }\n\n  useEffect(() => {\n    if (mixer) {\n      createAnimationActions({ object: loadedObj })\n    }\n  }, [mixer])\n\n  useEffect(() => {\n    if (currentAction) {\n      const targetClip = currentAction.getClip()\n      addConvertingEventlistener({ transformControls: theTransformControls, animationMixer: mixer, targetClip, targetIndex: currentIndex });\n    }\n  }, [currentAction, currentIndex])\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useRendering } from './useRendering'\nimport { useReRendering } from './useReRendering'\nimport _ from 'lodash'\n\nconst Title = styled.div`\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.5rem;\n`\n\nconst Input = styled.input``\n\nconst RenderingDiv = styled.div`\n  min-height: 1024px;\n`\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  border-bottom: 1px solid gray;\n`\n\nconst Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  border-right: 1px solid gray;\n  cursor: pointer;\n`\n\nconst id = 'renderingDiv'\n\nconst App = () => {\n  const [inputUrl, setInputUrl] = useState(undefined);\n  const [loadedObj, setLoadedObj] = useState(undefined);\n  const [mixer, setMixer] = useState(undefined);\n  const [currentAction, setCurrentAction] = useState(undefined);\n  const [possibleActions, setPossibleActions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [theTransformControls, setTheTransfromControls] = useState(undefined);\n\n  const onFileChange = (event) => {\n    const file = event.target.files[0];\n    if (Boolean(file)) {\n      const fileUrl = URL.createObjectURL(file);\n      setInputUrl(fileUrl);\n    }\n  }\n\n  const onResetButtonClick = () => {\n    mixer.setTime(0);\n    currentAction.reset();\n  }\n  \n  const onBackwardButtonClick = () => {\n    mixer.timeScale = -0.3;\n    currentAction.play();\n  }\n\n  const onForwardButtonClick = () => {\n    mixer.timeScale = 0.3;\n    currentAction.play();\n  }\n\n  const onPauseButtonClick = () => {\n    mixer.timeScale = 0;\n  }\n\n  const onStopButtonClick = () => {\n    currentAction.stop();\n  }\n\n  const onAnimButtonClick = ({ action }) => {\n    currentAction.stop();\n    setCurrentAction(action);\n  }\n\n  // 특정 인덱스(input value)로 이동\n  const onPressEnter = (event) => {\n    if (event.key === \"Enter\") {\n      const targetIdx = parseInt(event.target.value % currentAction._clip.tracks[0].times.length);  // 실제 프로젝트에서는 timeline 에서 각 점들이 가지고 있는 index\n      if (_.isFinite(targetIdx)) {\n        setCurrentIndex(targetIdx);\n        if (!currentAction.isRunning()) { // 한 번도 재생되지 않은 상태에서 특정 시점으로 이동할 경우, 우선 재생 시키고 멈춰야 정상 동작\n          currentAction.play();\n        }\n        mixer.timeScale = 0.3;\n        const targetTime = parseFloat(currentAction._clip.tracks[0].times[targetIdx] / mixer.timeScale);\n        mixer.setTime(targetTime);\n        mixer.timeScale = 0;\n      }\n    }\n  }\n\n  useRendering({ id, inputUrl, setLoadedObj, mixer, setMixer, setTheTransfromControls })\n  \n  useReRendering({ mixer, loadedObj, currentAction, setCurrentAction, setPossibleActions, currentIndex, theTransformControls })\n  \n  return (\n    <>\n      <Title>Animating Sample</Title>\n      <Input type='file' accept='.fbx' onChange={onFileChange}/>\n      <RenderingDiv id='renderingDiv'></RenderingDiv>\n      {currentAction &&\n        (<ButtonContainer>\n          <Button onClick={onResetButtonClick}>Reset</Button>\n          <Button onClick={onBackwardButtonClick}>Backward</Button>\n          <Button onClick={onForwardButtonClick}>Forward</Button>\n          <Button onClick={onPauseButtonClick}>Pause</Button>\n          <Button onClick={onStopButtonClick}>Stop</Button>\n        </ButtonContainer>)}\n      {currentAction && <Input onKeyPress={onPressEnter} />}\n      {possibleActions.length !== 0 && \n        (<ButtonContainer>\n          {possibleActions && \n            possibleActions.map((action, index) => <Button onClick={() => onAnimButtonClick({ action })} key={index}>{`Anim #${index + 1}`}</Button>)}\n        </ButtonContainer>)}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}